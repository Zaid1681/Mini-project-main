[{"C:\\Mini projet fokus\\fokus-master\\src\\containers\\App.js":"1","C:\\Mini projet fokus\\fokus-master\\src\\containers\\settings\\settingsSlice.js":"2","C:\\Mini projet fokus\\fokus-master\\src\\containers\\notes\\index.js":"3","C:\\Mini projet fokus\\fokus-master\\src\\containers\\dashboard\\index.js":"4","C:\\Mini projet fokus\\fokus-master\\src\\components\\TaskBoard\\TaskInput.js":"5","C:\\Mini projet fokus\\fokus-master\\src\\helpers\\index.js":"6","C:\\Mini projet fokus\\fokus-master\\src\\containers\\settings\\NotesViewToggle.js":"7","C:\\Mini projet fokus\\fokus-master\\src\\containers\\settings\\AutoMarkDone.js":"8","C:\\Mini projet fokus\\fokus-master\\src\\containers\\menu\\Menu.js":"9","C:\\Mini projet fokus\\fokus-master\\src\\components\\TaskBoard\\TaskFeedback.js":"10","C:\\Mini projet fokus\\fokus-master\\src\\components\\notes\\NewNoteButton.js":"11","C:\\Mini projet fokus\\fokus-master\\src\\components\\dashBoard\\DayDate.js":"12","C:\\Mini projet fokus\\fokus-master\\src\\components\\customIcons\\index.js":"13","C:\\Mini projet fokus\\fokus-master\\src\\components\\FocusBoard\\FocussedTask.js":"14","C:\\Mini projet fokus\\fokus-master\\src\\components\\MiscBoard\\LabelPie.js":"15","C:\\Mini projet fokus\\fokus-master\\src\\components\\MiscBoard\\TaskProgressCard.js":"16","C:\\Mini projet fokus\\fokus-master\\src\\components\\MusicBox\\musicUtils.js":"17","C:\\Mini projet fokus\\fokus-master\\src\\hooks\\useTimer.js":"18","C:\\Mini projet fokus\\fokus-master\\src\\serviceWorker.js":"19","C:\\Mini projet fokus\\fokus-master\\src\\containers\\mobileView\\index.js":"20","C:\\Mini projet fokus\\fokus-master\\src\\containers\\dashboard\\DashboardMain.js":"21","C:\\Mini projet fokus\\fokus-master\\src\\components\\TaskBoard\\TaskLabelSelect.js":"22","C:\\Mini projet fokus\\fokus-master\\src\\helpers\\fokusUsageTips.js":"23","C:\\Mini projet fokus\\fokus-master\\src\\containers\\miscBoard\\MiscBoard.js":"24","C:\\Mini projet fokus\\fokus-master\\src\\components\\MusicBox\\Soundscapes.js":"25","C:\\Mini projet fokus\\fokus-master\\src\\containers\\login\\LoginPage.js":"26","C:\\Mini projet fokus\\fokus-master\\src\\components\\TaskBoard\\TaskCard.js":"27","C:\\Mini projet fokus\\fokus-master\\src\\components\\notes\\NotesPreview.js":"28","C:\\Mini projet fokus\\fokus-master\\src\\components\\notes\\NoteSearchInput.js":"29","C:\\Mini projet fokus\\fokus-master\\src\\containers\\focusBoard\\FocusBoard.js":"30","C:\\Mini projet fokus\\fokus-master\\src\\components\\FocusBoard\\EmptyFocusBox.js":"31","C:\\Mini projet fokus\\fokus-master\\src\\containers\\settings\\DefaultTaskLabel.js":"32","C:\\Mini projet fokus\\fokus-master\\src\\components\\MiscBoard\\TimeProgressCard.js":"33","C:\\Mini projet fokus\\fokus-master\\src\\components\\MiscBoard\\EmptyLabelPie.js":"34","C:\\Mini projet fokus\\fokus-master\\src\\store\\localStorageUtils.js":"35","C:\\Mini projet fokus\\fokus-master\\src\\helpers\\constants.js":"36","C:\\Mini projet fokus\\fokus-master\\src\\containers\\dashboard\\DashboardHero.js":"37","C:\\Mini projet fokus\\fokus-master\\src\\components\\notes\\NoteCard.js":"38","C:\\Mini projet fokus\\fokus-master\\src\\components\\MusicBox\\MusicVolumeControl.js":"39","C:\\Mini projet fokus\\fokus-master\\src\\index.js":"40","C:\\Mini projet fokus\\fokus-master\\src\\store\\index.js":"41","C:\\Mini projet fokus\\fokus-master\\src\\containers\\RegisterPage.js":"42","C:\\Mini projet fokus\\fokus-master\\src\\containers\\LandingPage.js":"43","C:\\Mini projet fokus\\fokus-master\\src\\containers\\taskBoard\\TaskBoard.js":"44","C:\\Mini projet fokus\\fokus-master\\src\\helpers\\themeStyles.js":"45","C:\\Mini projet fokus\\fokus-master\\src\\containers\\settings\\index.js":"46","C:\\Mini projet fokus\\fokus-master\\src\\components\\TaskBoard\\NoTasks.js":"47","C:\\Mini projet fokus\\fokus-master\\src\\components\\TaskBoard\\Divider.js":"48","C:\\Mini projet fokus\\fokus-master\\src\\helpers\\quotes.js":"49","C:\\Mini projet fokus\\fokus-master\\src\\components\\notes\\NotesListArea.js":"50","C:\\Mini projet fokus\\fokus-master\\src\\containers\\notes\\notesSlice.js":"51","C:\\Mini projet fokus\\fokus-master\\src\\components\\MiscBoard\\ProgressRings.js":"52","C:\\Mini projet fokus\\fokus-master\\src\\containers\\settings\\DefaultTaskTime.js":"53"},{"size":2858,"mtime":1664387054485,"results":"54","hashOfConfig":"55"},{"size":1312,"mtime":1651896996000,"results":"56","hashOfConfig":"55"},{"size":725,"mtime":1664131359995,"results":"57","hashOfConfig":"55"},{"size":810,"mtime":1664131269314,"results":"58","hashOfConfig":"55"},{"size":6919,"mtime":1651896996000,"results":"59","hashOfConfig":"55"},{"size":2950,"mtime":1651896996000,"results":"60","hashOfConfig":"55"},{"size":1745,"mtime":1651896996000,"results":"61","hashOfConfig":"55"},{"size":1025,"mtime":1651896996000,"results":"62","hashOfConfig":"55"},{"size":3666,"mtime":1664384391766,"results":"63","hashOfConfig":"55"},{"size":4201,"mtime":1651896996000,"results":"64","hashOfConfig":"55"},{"size":1772,"mtime":1651896996000,"results":"65","hashOfConfig":"55"},{"size":1423,"mtime":1651896996000,"results":"66","hashOfConfig":"55"},{"size":2280,"mtime":1651896996000,"results":"67","hashOfConfig":"55"},{"size":10297,"mtime":1651896996000,"results":"68","hashOfConfig":"55"},{"size":2823,"mtime":1651896996000,"results":"69","hashOfConfig":"55"},{"size":2050,"mtime":1651896996000,"results":"70","hashOfConfig":"55"},{"size":1285,"mtime":1651896996000,"results":"71","hashOfConfig":"55"},{"size":1528,"mtime":1651896996000,"results":"72","hashOfConfig":"55"},{"size":5141,"mtime":1651896996000,"results":"73","hashOfConfig":"55"},{"size":968,"mtime":1651896996000,"results":"74","hashOfConfig":"55"},{"size":520,"mtime":1651896996000,"results":"75","hashOfConfig":"55"},{"size":1370,"mtime":1651896996000,"results":"76","hashOfConfig":"55"},{"size":2726,"mtime":1651896996000,"results":"77","hashOfConfig":"55"},{"size":4704,"mtime":1651896996000,"results":"78","hashOfConfig":"55"},{"size":4547,"mtime":1651896996000,"results":"79","hashOfConfig":"55"},{"size":5497,"mtime":1667083253175,"results":"80","hashOfConfig":"55"},{"size":17173,"mtime":1651896996000,"results":"81","hashOfConfig":"55"},{"size":7450,"mtime":1651896996000,"results":"82","hashOfConfig":"55"},{"size":1795,"mtime":1651896996000,"results":"83","hashOfConfig":"55"},{"size":2090,"mtime":1651896996000,"results":"84","hashOfConfig":"55"},{"size":6209,"mtime":1651896996000,"results":"85","hashOfConfig":"55"},{"size":2205,"mtime":1651896996000,"results":"86","hashOfConfig":"55"},{"size":3090,"mtime":1651896996000,"results":"87","hashOfConfig":"55"},{"size":683,"mtime":1651896996000,"results":"88","hashOfConfig":"55"},{"size":2228,"mtime":1651896996000,"results":"89","hashOfConfig":"55"},{"size":113,"mtime":1651896996000,"results":"90","hashOfConfig":"55"},{"size":2169,"mtime":1663506007068,"results":"91","hashOfConfig":"55"},{"size":2232,"mtime":1651896996000,"results":"92","hashOfConfig":"55"},{"size":1577,"mtime":1651896996000,"results":"93","hashOfConfig":"55"},{"size":749,"mtime":1651896996000,"results":"94","hashOfConfig":"55"},{"size":810,"mtime":1651896996000,"results":"95","hashOfConfig":"55"},{"size":4824,"mtime":1667082879316,"results":"96","hashOfConfig":"55"},{"size":1074,"mtime":1664141075537,"results":"97","hashOfConfig":"55"},{"size":6464,"mtime":1664388880941,"results":"98","hashOfConfig":"55"},{"size":620,"mtime":1651896996000,"results":"99","hashOfConfig":"55"},{"size":2090,"mtime":1664383475768,"results":"100","hashOfConfig":"55"},{"size":687,"mtime":1651896996000,"results":"101","hashOfConfig":"55"},{"size":2654,"mtime":1651896996000,"results":"102","hashOfConfig":"55"},{"size":20133,"mtime":1651896996000,"results":"103","hashOfConfig":"55"},{"size":2448,"mtime":1651896996000,"results":"104","hashOfConfig":"55"},{"size":1416,"mtime":1651896996000,"results":"105","hashOfConfig":"55"},{"size":4224,"mtime":1651896996000,"results":"106","hashOfConfig":"55"},{"size":2216,"mtime":1651896996000,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1ykz8ti",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"143"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"153"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"156"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Mini projet fokus\\fokus-master\\src\\containers\\App.js",[],["235","236"],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\settings\\settingsSlice.js",[],["237","238"],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\notes\\index.js",["239"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport NotesListArea from \"./../../components/notes/NotesListArea\";\nimport NotesPreview from \"./../../components/notes/NotesPreview\";\nimport Menu from \"../menu/Menu\"\n\n\nconst NotesContainer = styled.div`\n    display: flex;\n    width: 100%;\n`;\n\nexport default function Notes() {\n    let [noteInPreview, setNoteInPreview] = useState(null);\n    return (\n        <>\n        <Menu />\n        <NotesContainer>\n            <NotesListArea setNoteInPreview={setNoteInPreview}/>\n            <NotesPreview setNoteInPreview={setNoteInPreview} note={noteInPreview} />\n        </NotesContainer>\n        </>\n    );\n}\n",["240","241"],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\dashboard\\index.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\components\\TaskBoard\\TaskInput.js",["242"],"import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { create, incrementGlobalKey, focusOnTask, updateLabelCount } from \"./../../containers/taskBoard/taskBoardSlice\";\nimport styled from \"styled-components\";\nimport { AiFillPlusCircle, AiFillClockCircle } from \"react-icons/ai\";\nimport { TaskFeedback } from \"./TaskFeedback\";\nimport { debounce } from \"../../helpers\";\n\nconst TaskInputContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 20px 0 10px 0;\n    width: 90%;\n    max-width: 396px;\n    border-radius: 10px;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    height: 50px;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.3);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.3);\n`;\n\nconst TaskContentInputDiv = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 90%;\n    width: 70%;\n    margin-left: 10px;\n    svg {\n        font-size: 1.3em;\n        margin-right: 5px;\n        color: #fabb18;\n    }\n`;\n\nconst TaskContentInputField = styled.input`\n    height: 100%;\n    width: 90%;\n    font-size: 0.9em;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    border: 0;\n    outline: none;\n    font-weight: bold;\n    &::placeholder {\n        color: #c1c1d7;\n    }\n`;\n\nconst TaskTimeInputDiv = styled.div`\n    display: flex;\n    align-items: center;\n    height: 90%;\n    width: 25%;\n    color: #c1c1d7;\n    span {\n        font-size: 0.7em;\n        font-weight: bold;\n    }\n    svg {\n        font-size: 1.2em;\n        color: #fabb18;\n    }\n`;\n\nconst TaskTimeInputField = styled.input`\n    height: 100%;\n    width: 30%;\n    font-size: 0.9em;\n    text-align: center;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    border: 0;\n    outline: none;\n    font-weight: bold;\n    &::placeholder {\n        color: #c1c1d7;\n    }\n    &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        margin: 0;\n    }\n        input[type=\"number\"] { \n        -moz-appearance: textfield;   \n    }\n`;\n\nexport default function TaskInput() {\n\n    const defaultTime = useSelector((s) => s.settings.defaultTime);\n    const defaultLabel = useSelector((s) => s.settings.defaultLabel);\n\n    const [task, setTask] = useState(\"\");\n    const [time, setTime] = useState(defaultTime);\n\n    const [generateFeedbackForTask, setGenerateFeedbackForTask] = useState(undefined);\n    const [generateFeedbackForTime, setGenerateFeedbackForTime] = useState(undefined);\n    const [isInputValid,setInputValid] = useState(false);\n\n    let taskContentInputRef, taskTimeInputRef;\n    const meta = useSelector((s) => s.tasks.meta);\n    const labels = useSelector((s) => s.tasks.labels);\n    const dispatch = useDispatch();\n\n    function submitTask(e) {\n        if (e.key === \"Enter\" && task.trim().length >= 1 && isInputValid) {\n            let temp = task.trim().split(\" \");\n            // add a max time limit\n            let taskTime = time;\n            let label = defaultLabel;\n            if (temp.length !== 1) {\n                if (!isNaN(parseInt(temp[temp.length - 1]))) {\n                    taskTime = parseInt(temp.pop());\n                } else if (temp[temp.length - 1][0] === \"#\" && temp[temp.length - 1].length > 1 && \"wpfmeWPFME\".includes(temp[temp.length - 1][1])) {\n                    let userLabel = temp[temp.length - 1].substring(1).toLowerCase();\n                    let found = false;\n                    for (let validLabel in labels) {\n                        found = validLabel.includes(userLabel);\n                        console.log(userLabel, validLabel);\n                        if (found) {\n                            label = validLabel;\n                            temp.pop();\n                            break;\n                        }\n                    }\n                }\n            }\n\n            temp = temp.join(\" \");\n            let newTask = {\n                id: Math.floor(Math.random() * 10000),\n                globalKey: meta.globalKey,\n                content: temp,\n                time: taskTime,\n                remainingTime: taskTime,\n                isRunning: false,\n                isCompleted: false,\n                createdAt: new Date().toISOString(),\n                label: label,\n            };\n            if (meta.focussedTaskIndex !== -1) dispatch(focusOnTask(meta.focussedTaskIndex + 1));\n            dispatch(create(newTask));\n            dispatch(incrementGlobalKey());\n            if (label !== null) dispatch(updateLabelCount({ oldLabel: null, newLabel: label }));\n            setTask(\"\");\n            setTime(defaultTime);\n            taskContentInputRef.value = \"\";\n            taskTimeInputRef.value = \"\";\n            taskContentInputRef.focus();\n        }\n    }\n\n    const debouncedGenerateInputFeedback = useCallback(\n        debounce((task, time) => {\n            if (task !== undefined) setGenerateFeedbackForTask(task);\n            if (time !== undefined) setGenerateFeedbackForTime(time);\n        }, 150),\n        []\n    );\n\n    function onTaskInputChangeHandler(task) {\n        setTask(task);\n        debouncedGenerateInputFeedback(task, undefined);\n    }\n\n    function onTimeInputChangeHandler(time) {\n        setTime(time);\n        debouncedGenerateInputFeedback(undefined, time);\n    }\n\n    // improve logic - both onKeyDown and onChange executing - combining will be better.\n    return (\n        <>\n            <TaskInputContainer>\n                <TaskContentInputDiv>\n                    <AiFillPlusCircle onClick={() => taskContentInputRef.focus()} />\n                    <TaskContentInputField\n                        type=\"text\"\n                        placeholder=\"i have to focus on ...\"\n                        ref={(el) => (taskContentInputRef = el)}\n                        onChange={(e) => onTaskInputChangeHandler(e.target.value)}\n                        onKeyDown={submitTask}\n                    />\n                </TaskContentInputDiv>\n                <TaskTimeInputDiv>\n                    <AiFillClockCircle onClick={() => taskTimeInputRef.focus()} />\n                    <TaskTimeInputField\n                        type=\"number\"\n                        placeholder={defaultTime}\n                        ref={(el) => (taskTimeInputRef = el)}\n                        onChange={(e) => onTimeInputChangeHandler(e.target.value)}\n                        onKeyDown={submitTask}\n                    />\n                    <span>mins</span>\n                </TaskTimeInputDiv>\n            </TaskInputContainer>\n            <TaskFeedback task={generateFeedbackForTask} time={generateFeedbackForTime} setInputValid={setInputValid}/>\n        </>\n    );\n}\n","C:\\Mini projet fokus\\fokus-master\\src\\helpers\\index.js",["243","244","245","246","247","248","249","250","251","252","253","254"],"export function formattedTimeString(x) {\n    x = Math.floor(x / 1000);\n    let secs = x % 60;\n    let mins = Math.floor(x / 60);\n\n    if (secs == 0) {\n        secs = `00`;\n    } else if (secs < 10) {\n        secs = `0${secs}`;\n    }\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n\n    return `${mins}:${secs}`;\n}\n\nexport function formattedTimeStringv2(x) {\n    x = Math.floor(x / 1000);\n    let secs = x % 60;\n    let mins = Math.floor(x / 60);\n\n    if (secs == 0) {\n        secs = `00`;\n    } else if (secs < 10) {\n        secs = `0${secs}`;\n    }\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n\n    return { mins, secs };\n}\n\nexport function getFormattedDate() {\n    let d = new Date();\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    return {\n        day: days[d.getDay()],\n        month: months[d.getMonth()],\n        date: d.getDate(),\n        year: d.getFullYear(),\n    };\n}\n\nexport function getFormattedListTimeSummary(x) {\n    x = Math.floor(x / 1000);\n    let mins = Math.floor((x % 3600) / 60);\n    let hours = Math.floor(x / 3600);\n\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n    if (hours == 0) {\n        hours = `0`;\n    } else if (hours < 10) {\n        hours = `${hours}`;\n    }\n\n    return { hours, mins };\n}\n\nexport function debounce(fn, wait) {\n    let t;\n    return function () {\n        clearTimeout(t);\n        t = setTimeout(() => fn.apply(this, arguments), wait);\n    };\n}\n\nexport function updatePageTitle(title) {\n    document.title = title;\n}\n\nexport function getOrdinalSuffix(i) {\n    let j = i % 10,\n        k = i % 100;\n    if (j == 1 && k != 11) {\n        return \"st\";\n    }\n    if (j == 2 && k != 12) {\n        return \"nd\";\n    }\n    if (j == 3 && k != 13) {\n        return \"rd\";\n    }\n    return \"th\";\n}\n\nconst MILLI_IN_30_DAYS = 2592000000;\nconst MILLI_IN_A_DAY = 86400000;\nconst MILLI_IN_A_HOUR = 3600000;\nconst MILLI_IN_A_MIN = 60000;\n\nexport function getTimeDifferenceForNotes(d1, d2) {\n    let difference = d2 - d1;\n\n    if (difference < MILLI_IN_A_HOUR) {\n        let minsGap = Math.floor(difference / MILLI_IN_A_MIN);\n        return minsGap === 0 ? `recently` : `${minsGap}mins ago`;\n    } else if (difference < MILLI_IN_A_DAY) {\n        let hoursGap = Math.floor(difference / MILLI_IN_A_HOUR);\n        if (hoursGap <= 1) return `${hoursGap}hr ago`;\n        else return `${hoursGap}hrs ago`;\n    } else if (difference < MILLI_IN_30_DAYS) {\n        let daysGap = Math.floor(difference / MILLI_IN_A_DAY);\n        if (daysGap <= 1) return `${daysGap}day ago`;\n        else return `${daysGap}days ago`;\n    } else {\n        return `30+days ago`;\n    }\n}\n",["255","256"],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\settings\\NotesViewToggle.js",["257"],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { setGridView } from \"./settingsSlice\";\nimport { FaThList } from \"react-icons/fa\";\nimport { BsFillGrid3X3GapFill } from \"react-icons/bs\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst NotesViewDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 80%;\n    height: 70px;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    p {\n        margin: 0;\n    }\n`;\n\nexport const Options = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 120px;\n    svg{\n        cursor: pointer;\n        margin:3px;\n        font-size: 1.2em;\n    }\n    #list-view-opt {\n        color: ${(p) => (p.isGridView ? p.theme.primaryText : \"#fabb18\")};\n    }\n    #grid-view-opt {\n        color: ${(p) => (p.isGridView ? \"#fabb18\" : p.theme.primaryText)};\n    }\n`;\n\nexport function NotesViewToggle() {\n    const isGridView = useSelector((s) => s.settings.isGridView);\n    const dispatch = useDispatch();\n\n    return (\n        <NotesViewDiv>\n            <p>Notes View Layout</p>\n            <Options isGridView={isGridView}>\n                <FaThList id=\"list-view-opt\" data-for=\"list-view\" data-tip=\"\" onClick={() => {console.log('fd');dispatch(setGridView(false))}} />\n                <BsFillGrid3X3GapFill id=\"grid-view-opt\" data-for=\"grid-view\" data-tip=\"\" onClick={() => dispatch(setGridView(true))} />\n                <ReactTooltip id=\"list-view\" getContent={() => \"List View\"} />\n                <ReactTooltip id=\"grid-view\" getContent={() => \"Grid View\"} />\n            </Options>\n        </NotesViewDiv>\n    );\n}\n","C:\\Mini projet fokus\\fokus-master\\src\\containers\\settings\\AutoMarkDone.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\menu\\Menu.js",["258"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { MdDashboard, MdSettings } from \"react-icons/md\";\nimport { IoMdAnalytics } from \"react-icons/io\";\nimport { BiExclude , BiNotepad} from \"react-icons/bi\";\nimport { NavLink } from \"react-router-dom\";\nimport ReactTooltip from \"react-tooltip\";\nimport logo from \"./../../images/logo.svg\";\nimport namedLogoLight from \"./../../images/namedLogoDark.svg\";\n\nconst MenuContainer = styled.div`\n    width: 10%;\n    max-width: 200px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background-color: #020202;\n    border-radius: 0 10px 10px 0;\n    border-left: 15px solid #fabb18;\n    position: relative;\n`;\n\nconst AppLogoContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    width: 100%;\n    top: 25px;\n    left: 5px;\n    img {\n        width: 60%;\n    }\n    /* background-color:pink; */\n`;\n\nconst AppTextLogoContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    width: 100%;\n    bottom: 15px;\n    img {\n        width: 75%;\n    }\n    /* background-color:purple; */\n`;\n\nconst activeClassName = \"nav-item-active\";\nconst MenuOptions = styled(NavLink).attrs({ activeClassName })`\n    display: flex;\n    justify-content: center;\n    margin: 7px 0;\n    border-radius: 0 5px 5px 0;\n    background-color: #020202;\n    svg {\n        font-size: 1.8em;\n        color: #fff;\n        margin: 10px 0;\n    }\n    &.${activeClassName} {\n        svg {\n            color: #fabb18;\n        }\n    }\n    width: 100%;\n    transition: width 0.2s;\n    &:hover {\n        svg {\n            color: #fff;\n        }\n        width: 125%;\n        background-color: #fabb18;\n    }\n`;\n\nconst DummyMenuOptions = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 7px 0;\n    border-radius: 0 5px 5px 0;\n    background-color: #020202;\n    svg {\n        font-size: 1.8em;\n        color: #fff;\n        margin: 10px 0;\n    }\n    width: 100%;\n    transition: width 0.2s;\n    &:hover {\n        svg {\n            color: #fff;\n        }\n        width: 125%;\n        background-color: #fabb18;\n    }\n`;\n\nexport default function Menu() {\n    return (\n        <MenuContainer>\n            <AppLogoContainer>\n                <img src={logo} alt=\"logo\" />\n            </AppLogoContainer>\n            <MenuOptions exact to=\"/dashboard\">\n                <MdDashboard data-tip=\"\" data-for=\"dashboard\" />\n                <ReactTooltip id=\"dashboard\" getContent={() => \"Dashboard\"} />\n            </MenuOptions>\n\n            <MenuOptions exact to=\"/notes\">\n                <BiNotepad data-tip=\"\" data-for=\"notes\" />\n                <ReactTooltip id=\"notes\" getContent={() => \"Notes\"} />\n            </MenuOptions>\n\n            <MenuOptions exact to=\"/pomodoro\">\n                <BiNotepad data-tip=\"\" data-for=\"/PomodoroFile\" />\n                <ReactTooltip id=\"App2\" getContent={() => \"App2\"} />\n            </MenuOptions>\n\n            <DummyMenuOptions>\n                <BiExclude data-tip=\"\" data-for=\"analytics\" />\n                <ReactTooltip id=\"analytics\" getContent={() => \"Coming Soon\"} />\n            </DummyMenuOptions>\n\n            <MenuOptions exact to=\"/settings\">\n                <MdSettings data-tip=\"\" data-for=\"settings\" />\n                <ReactTooltip id=\"settings\" getContent={() => \"Settings\"} />\n            </MenuOptions>\n\n            <AppTextLogoContainer>\n                <img src={namedLogoLight} alt=\"fokus\" />\n            </AppTextLogoContainer>\n        </MenuContainer>\n    );\n}\n","C:\\Mini projet fokus\\fokus-master\\src\\components\\TaskBoard\\TaskFeedback.js",["259"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { debounce, getFormattedListTimeSummary } from \"../../helpers\";\nimport { FaClock } from \"react-icons/fa\";\n\nconst TaskFeedbackContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n    margin: 0 0 10px 0;\n`;\n\nconst RemainingTaskListTimeDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color:${p=>p.theme.primaryText};\n    p {\n        margin: 0 3px;\n        font-weight: bold;\n        font-size: 0.8em;\n    }\n    svg {\n        font-size: 0.8em;\n        margin: 0 3px;\n    }\n    span {\n        margin: 0 2px;\n        font-size: 0.8em;\n    }\n`;\n\nconst ErrorMessage = styled.div`\n    display: flex;\n    align-items: center;\n    color: red;\n    p {\n        margin: 0;\n        font-size: 0.8em;\n    }\n`;\n\nexport function TaskFeedback({ task, time, setInputValid }) {\n    let [error, setError] = useState(undefined);\n\n    useEffect(() => {\n        let errorGenerated = false;\n        if (task !== undefined) {\n            // if time is there, it should be stripped and validated first before the actual task content\n            let temp = task?.trim().split(\" \");\n            if (temp !== undefined && !isNaN(parseInt(temp[temp.length - 1]))) {\n                let taskTime = parseInt(temp.pop());\n                if (taskTime <= 0) {\n                    setError(\"Hmmm. Time for this task seems weird,no?\");\n                    errorGenerated = true;\n                    setInputValid(false);\n                    return;\n                } else if (taskTime > 120) {\n                    setError(\"Time should be <120mins for better focus !\");\n                    errorGenerated = true;\n                    setInputValid(false);\n                    return;\n                }\n            }\n            temp = temp?.join(\" \");\n\n            if (temp?.length === 0) {\n                setError(undefined);\n                errorGenerated = true;\n                setInputValid(false);\n            } else if (temp?.length < 3) {\n                setError(\"Task should be atleast 3 characters long.\");\n                errorGenerated = true;\n                setInputValid(false);\n            } else if (temp?.length > 100) {\n                setError(\"Hey, that's too long. Keep it short and simple.\");\n                errorGenerated = true;\n                setInputValid(false);\n            } else {\n                setError(undefined);\n                setInputValid(true);\n            }\n        }\n\n        if (!errorGenerated) {\n            // will check for error in time only if no error in task\n            if (time !== undefined && time !== \"\") {\n                let numericTime = parseInt(time);\n                if (numericTime <= 0 || numericTime > 120) {\n                    setError(\"Time should be between 1-120 mins\");\n                    setInputValid(false);\n                } else {\n                    setError(undefined);\n                    setInputValid(true);\n                }\n            }\n        }\n    }, [task, time, setInputValid]);\n\n    const remainingTaskListTime = useSelector((s) => s.tasks.meta.remainingTaskListTime);\n    const rTLTObj = getFormattedListTimeSummary(remainingTaskListTime);\n    let rTLTHours = rTLTObj.hours;\n    let rTLTMins = rTLTObj.mins;\n\n    return (\n        <TaskFeedbackContainer>\n            {error === undefined ? (\n                <RemainingTaskListTimeDiv>\n                    {remainingTaskListTime === 0 ? (\n                        <p>Create New Task</p>\n                    ) : (\n                        <>\n                            <FaClock />\n                            <p>list time:</p>\n                            {rTLTHours !== \"0\" && <span>{rTLTHours}h</span>}\n                            {rTLTMins !== \"00\" && <span>{rTLTMins}m</span>}\n                        </>\n                    )}\n                </RemainingTaskListTimeDiv>\n            ) : (\n                <ErrorMessage>\n                    <p>{error}</p>\n                </ErrorMessage>\n            )}\n        </TaskFeedbackContainer>\n    );\n}\n","C:\\Mini projet fokus\\fokus-master\\src\\components\\notes\\NewNoteButton.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\components\\dashBoard\\DayDate.js",["260"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { BsCalendarFill } from \"react-icons/bs\";\nimport { getFormattedDate, getOrdinalSuffix } from \"../../helpers\";\n\nconst DayDateDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: space-around;\n    width: 25%;\n    height: 55%;\n`;\n\nconst CalendarIconDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 20%;\n    svg {\n        color: #fabb18;\n        font-size: 1.4em;\n    }\n`;\n\nconst DayDateText = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: center;\n    width: 70%;\n    font-weight: bold;\n    font-size: 0.8em;\n    color: ${(p) => p.theme.primaryText};\n    p {\n        margin: 0;\n    }\n    sup {\n        font-size: 0.5em;\n    }\n`;\n\nexport function DayDate() {\n    const DateObj = getFormattedDate();\n    return (\n        <DayDateDiv>\n            <CalendarIconDiv>\n                <BsCalendarFill />\n            </CalendarIconDiv>\n            <DayDateText>\n                <span>\n                    {DateObj.day} {DateObj.date}\n                    <sup>{getOrdinalSuffix(DateObj.date)}</sup>\n                </span>\n                <p>\n                    {DateObj.month}, {DateObj.year}\n                </p>\n            </DayDateText>\n        </DayDateDiv>\n    );\n}\n",["261","262"],"C:\\Mini projet fokus\\fokus-master\\src\\components\\customIcons\\index.js",[],["263","264"],"C:\\Mini projet fokus\\fokus-master\\src\\components\\FocusBoard\\FocussedTask.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\components\\MiscBoard\\LabelPie.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\components\\MiscBoard\\TaskProgressCard.js",[],["265","266"],"C:\\Mini projet fokus\\fokus-master\\src\\components\\MusicBox\\musicUtils.js",[],["267","268"],"C:\\Mini projet fokus\\fokus-master\\src\\hooks\\useTimer.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\serviceWorker.js",[],["269","270"],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\mobileView\\index.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\dashboard\\DashboardMain.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\components\\TaskBoard\\TaskLabelSelect.js",["271"],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst TaskSelectInput = styled.select`\n    font-weight: bold;\n    text-align: center;\n    border:0;\n    background-color:${p=>p.theme.backgroundSecondary};\n    color:${p=>p.theme.primaryText};\n    option{\n        font-weight:bold;\n    }\n`;\n\nexport default function TaskLabel(p) {\n    const labels = useSelector((s) => s.tasks.labels);\n    const [updatedLabel, setUpdatedLabel] = useState(p.taskLabel);\n\n    return (\n        // <div style={{ height: \"100%\", width: 80 }}>\n        <TaskSelectInput\n        autoFocus\n            name=\"labels\"\n            onBlur={() => p.onBlur(p.taskId,p.taskLabel, updatedLabel)}\n            defaultValue={updatedLabel}\n            onChange={(e) => setUpdatedLabel(e.target.value)}\n            onKeyDown={(e) => (e.key === \"Enter\" ? p.onBlur(p.taskId,p.taskLabel, updatedLabel) : null)}\n        >\n            <option value=\"none\">none</option> \n            {/* keeping option:none at top makes it show up if taskLabel is null which is desired */}\n            {Object.keys(labels).map((e, idx) => (\n                <option style={{color:`${labels[e].color}`}} key={idx} value={e}>\n                    {e}\n                </option>\n            ))}\n        </TaskSelectInput>\n        // </div>\n    );\n}\n","C:\\Mini projet fokus\\fokus-master\\src\\helpers\\fokusUsageTips.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\miscBoard\\MiscBoard.js",["272","273"],"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { LabelPie } from \"./../../components/MiscBoard/LabelPie\";\nimport { ProgressRings } from \"./../../components/MiscBoard/ProgressRings\";\nimport { TimeProgressCard } from \"./../../components/MiscBoard/TimeProgressCard\";\nimport { TaskProgressCard } from \"./../../components/MiscBoard/TaskProgressCard\";\nimport { getTodaysQuote } from \"./../../helpers/quotes\";\n\nconst MiscBoardContainer = styled.div`\n    flex: 1 1 0;\n    min-width: 346px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: center;\n    height: 100%;\n    /* background-color:orange; */\n`;\n\nconst MainSummaryContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    width: 80%;\n    max-width: 326px;\n    height: 226px;\n    margin: 10px 0;\n    border-radius: 20px;\n    background-color:${p=>p.theme.backgroundSecondary};\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    /* backface-visibility: hidden;\n    transform: translateZ(0);\n    transition: box-shadow 0.2s ease-in-out,transform 0.2s ease-in-out ;\n    &:hover {\n        transform: scale(1.02);\n        -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\n        box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\n    } */\n`;\n\nconst ProgressRingContainer = styled.div`\n    display: flex;\n    width: 50%;\n    height: 95%;\n    border-radius: 10px;\n    /* -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);*/\n    /* background-color: #f7f7fa;  */\n`;\n\nconst ProgressCardContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 40%;\n    height: 95%;\n    border-radius: 10px;\n    /* -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    background-color: #f7adfa; */\n`;\n\nconst QuoteAndLabelContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 80%;\n    max-width: 326px;\n    height: 186px;\n    margin: 10px 0;\n    /* background-color: purple; */\n`;\n\nconst LabelPieContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 45%;\n    height: 90%;\n    border-radius: 10px;\n    background-color:${p=>p.theme.backgroundSecondary};\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n`;\n\nfunction getQuoteFontSize(letterCount){\n    let size = -0.0035*letterCount+1.3; // eqn of line with 40 - 1.1em and 180 - 0.6em\n    size = size.toPrecision(3);\n    return `${size}em`\n}\nconst QuoteContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 50%;\n    height: 100%;\n    border-radius: 10px;\n    position: relative;\n    backface-visibility: hidden;\n    -webkit-backface-visibility: hidden;\n    transform: translateZ(0);\n    font-weight: bold;\n    color:${p=>p.theme.primaryText};\n    p {\n        margin: 0 3px;\n        font-size: ${p=>getQuoteFontSize(p.length)};\n        &::before{\n            color:#fabb18;\n            content:\"“ \";\n        }\n        &::after{\n            color:#fabb18;\n            content:\" ”\";\n        }\n    }\n    span {\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        margin: 5px;\n        font-size: 0.65em;\n        color:#fabb18;\n    }\n    transition: transform 0.2s ease-in-out;\n    &:hover {\n        transform: scale(1.2);\n    }\n`;\n\nexport function MiscBoard() {\n\n    let todaysQuote = getTodaysQuote();\n    return (\n        <MiscBoardContainer>\n            <MainSummaryContainer>\n                <ProgressRingContainer>\n                    <ProgressRings />\n                </ProgressRingContainer>\n                <ProgressCardContainer>\n                    <TaskProgressCard />\n                    <TimeProgressCard />\n                </ProgressCardContainer>\n            </MainSummaryContainer>\n\n            <QuoteAndLabelContainer>\n                <QuoteContainer length={todaysQuote.length}>\n                    <p>\n                        {todaysQuote.quote}\n                    </p>\n                    <span>&mdash; {todaysQuote.author} </span>\n                </QuoteContainer>\n                <LabelPieContainer>\n                    <LabelPie />\n                </LabelPieContainer>\n            </QuoteAndLabelContainer>\n        </MiscBoardContainer>\n    );\n}\n","C:\\Mini projet fokus\\fokus-master\\src\\components\\MusicBox\\Soundscapes.js",["274"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { soundOptions, generateAudioElement, muteOption } from \"./musicUtils\";\nimport { changeSoundscapeTrack } from \"./../../containers/taskBoard/taskBoardSlice\";\nimport { MusicVolumeControl } from \"./MusicVolumeControl\";\nimport { GoUnmute, GoMute } from \"react-icons/go\";\n\nconst SoundscapesContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    /* transition: box-shadow 0.2s ease-in-out,transform 0.2s ease-in-out ;\n    &:hover {\n        transform: scale(1.02);\n        -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\n        box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\n    } */\n`;\n\nconst SoundscapesDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    height: 70%;\n    /* background-color: orange; */\n    color: #fabb18;\n`;\n\nconst SoundscapesHeader = styled.div`\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    width: 90%;\n    position: relative;\n    p {\n        margin: 0;\n        font-weight: bold;\n    }\n    svg {\n        position: absolute;\n        top: 0;\n        right: 0;\n        font-size: 1.4em;\n        margin-left: auto;\n    }\n    svg#unmuted {\n        cursor: pointer;\n    }\n`;\n\nconst SoundOptionsDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 85%;\n    /* background-color: #f8faaa; */\n`;\n\nconst SoundOptionsInput = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    flex-direction: column;\n    /* background-color: #b16afa; */\n    height: 80%;\n    margin: 0 5px;\n    img {\n        width: 40px;\n        cursor: pointer;\n        transition: transform 0.2s;\n        &:hover {\n            transform: scale(1.3);\n        }\n    }\n    span {\n        margin: 0;\n        font-size: 0.8em;\n        font-weight: bold;\n        color: ${(p) => (p.isSelectedSound ? \"#FABB18\" : p.theme.primaryText)};\n        cursor: pointer;\n    }\n`;\n\nconst SoundVolumeControl = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 90%;\n    height: 15%;\n`;\n\nexport function Soundscapes() {\n    const soundscape = useSelector((s) => s.tasks.soundscape);\n    const dispatch = useDispatch();\n\n    const [soundscapeAudioElement, setSoundscapeAudioElement] = useState(() => generateAudioElement(soundscape.track, soundscape.volume));\n\n    // ---- danger zone: don't change without full surety , this code is prone to issues ---///\n\n    useEffect(() => {\n        soundscapeAudioElement.src = soundscape.track !== \"mute\" ? soundOptions[soundscape.track].src : muteOption.src;\n        return () => soundscapeAudioElement.pause();\n    }, [soundscape.track, soundscapeAudioElement, soundscape.isPlaying]);\n\n    soundscapeAudioElement.volume = soundscape.volume;\n    soundscapeAudioElement.addEventListener(\"canplay\", () => {\n        if (soundscape.isPlaying) {\n            soundscapeAudioElement.play();\n        } else {\n            soundscapeAudioElement.pause();\n        }\n    });\n\n    // ---- danger zone: this might be due to my lack of knowledge of useEffect or weird Audio element behaviour ---///\n\n    function isSelectedSound(track) {\n        return soundscape.track === track;\n    }\n\n    return (\n        <SoundscapesContainer>\n            <SoundscapesDiv>\n                <SoundscapesHeader>\n                    <p>Soundscapes</p>\n                    {soundscape.track === \"mute\" ? <GoMute id=\"muted\" /> : <GoUnmute id=\"unmuted\" onClick={() => dispatch(changeSoundscapeTrack(\"mute\"))} />}\n                </SoundscapesHeader>\n                <SoundOptionsDiv>\n                    {Object.keys(soundOptions).map((i) => (\n                        <SoundOptionsInput key={i} onClick={() => dispatch(changeSoundscapeTrack(i))} isSelectedSound={isSelectedSound(i)}>\n                            <img src={soundOptions[i].img} alt={i} />\n                            <span>{soundOptions[i].label}</span>\n                        </SoundOptionsInput>\n                    ))}\n                </SoundOptionsDiv>\n            </SoundscapesDiv>\n            <SoundVolumeControl>\n                <MusicVolumeControl isDisabled={soundscape.track===\"mute\"}/>\n            </SoundVolumeControl>\n        </SoundscapesContainer>\n    );\n}\n","C:\\Mini projet fokus\\fokus-master\\src\\containers\\login\\LoginPage.js",["275"],"C:\\Mini projet fokus\\fokus-master\\src\\components\\TaskBoard\\TaskCard.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\components\\notes\\NotesPreview.js",["276","277"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { FaArrowRight, FaTrash, FaClipboard } from \"react-icons/fa\";\nimport { colorOptions, create, update, remove } from \"../../containers/notes/notesSlice\";\nimport { motion } from \"framer-motion\";\nimport ReactMarkdown from \"react-markdown\";\nimport { AiFillEye } from \"react-icons/ai\";\nimport { RiFileEditFill } from \"react-icons/ri\";\nimport { debounce } from \"./../../helpers\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst NotesPreviewContainer = styled(motion.div)`\n    display: flex;\n    flex-direction: column;\n    flex: 0 1 0;\n    position: relative;\n    border-left: solid 1px #fabb18;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n`;\n\nconst NoteContentDiv = styled.div`\n    width: 100%;\n    height: 95%;\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n`;\n\nconst EditNoteInput = styled.textarea`\n    resize: none;\n    height: 100%;\n    padding: 20px 0 0 25px;\n    font-size: 1em;\n    font-family: monospace;\n    vertical-align: center;\n    border: none;\n    outline: none;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    &::placeholder {\n        color: #c1c1d7;\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst MarkdownWrapper = styled.div`\n    padding: 20px 0 0 25px;\n    color: ${(p) => p.theme.primaryText};\n`;\n\nconst NoteActionMenu = styled.div`\n    width: 100%;\n    height: 5%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #fabb18;\n`;\n\nconst MenuActionButtonGroup = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n`;\n\nconst MenuActionButton = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    cursor: pointer;\n    svg {\n        padding: 1px 10px;\n        color: ${(p) => p.theme.primaryText};\n        font-size: 1em;\n    }\n    &:hover {\n        background-color: ${(p) => p.theme.backgroundSecondary};\n    }\n`;\n\nconst NoteColorSelectionBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 8px;\n    height: 100%;\n    width: 180px;\n    margin: 4px;\n`;\n\nconst ColorOption = styled.div`\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    cursor: pointer;\n    background-color: ${(p) => p.color};\n    background-clip: content-box;\n    padding: 2px;\n    margin: 0 3px;\n    border: ${(p) => (p.isSelected ? \"3px solid black\" : \"\")};\n`;\n\nconst debouncedUpdateNoteContent = debounce((dispatch, id, updatedNoteContent) => {\n    dispatch(update({ id: id, noteContent: updatedNoteContent.trim() }));\n}, 1000);\n\nexport default function NotesPreview({ note, setNoteInPreview }) {\n    const dispatch = useDispatch();\n    const [editNote, setEditNote] = useState();\n    const [noteContent, setNoteContent] = useState();\n    const [noteColor, setNoteColor] = useState();\n\n    useEffect(() => {\n        if (note !== null) {\n            setNoteContent(note.content);\n            setNoteColor(note.color);\n            setEditNote(true);\n        }\n    }, [note]);\n\n    const handleContentChange = (updatedNoteContent) => {\n        setNoteContent(updatedNoteContent);\n        debouncedUpdateNoteContent(dispatch, note.id, updatedNoteContent);\n    };\n\n    const handleColorUpdate = (note, noteColor) => {\n        let updatePayload = {\n            id: note.id,\n            noteColor,\n        };\n        dispatch(update(updatePayload));\n        setNoteColor(noteColor);\n    };\n\n    const handleDeleteNoteAction = (id) => {\n        dispatch(remove(id));\n        setNoteInPreview(null);\n    };\n\n    const handleCloseAction = () => {\n        dispatch(remove(null)); // clears all empty body notes\n        setNoteInPreview(null);\n    };\n\n    return (\n        <AnimatePresence>\n            <NotesPreviewContainer\n                initial={{\n                    flex: note === null ? \"0 1 0\" : \"2 1 0\",\n                }}\n                animate={{\n                    flex: note === null ? \"0 1 0\" : \"2 1 0\",\n                }}\n            >\n                {note !== null && (\n                    <>\n                        <NoteActionMenu>\n                            <MenuActionButtonGroup>\n                                <MenuActionButton onClick={() => handleCloseAction()}>\n                                    <FaArrowRight data-for=\"closeAction\" data-tip=\"\" />\n                                    <ReactTooltip id=\"closeAction\" getContent={() => \"Close Note\"} />\n                                </MenuActionButton>\n                                <MenuActionButton data-for=\"viewOrEditAction\" data-tip=\"\" onClick={() => setEditNote(!editNote)}>\n                                    {editNote ? <AiFillEye /> : <RiFileEditFill />}\n                                    <ReactTooltip id=\"viewOrEditAction\" getContent={() => (editNote ? \"View Markdown\" : \"Edit Note\")} />\n                                </MenuActionButton>\n                                <MenuActionButton onClick={() => navigator.clipboard.writeText(noteContent)}>\n                                    <FaClipboard data-for=\"copyAction\" data-tip=\"\" />\n                                    <ReactTooltip id=\"copyAction\" getContent={() => \"Copy Note\"} />\n                                </MenuActionButton>\n\n                                <MenuActionButton onClick={() => handleDeleteNoteAction(note.id)}>\n                                    <FaTrash data-for=\"deleteAction\" data-tip=\"\" />\n                                    <ReactTooltip id=\"deleteAction\" getContent={() => \"Delete Note\"} />\n                                </MenuActionButton>\n                            </MenuActionButtonGroup>\n                            <NoteColorSelectionBox>\n                                {Object.keys(colorOptions).map((color, idx) => (\n                                    <ColorOption\n                                        key={idx}\n                                        onClick={() => handleColorUpdate(note, colorOptions[color])}\n                                        isSelected={noteColor === colorOptions[color]}\n                                        color={colorOptions[color]}\n                                    />\n                                ))}\n                            </NoteColorSelectionBox>\n                        </NoteActionMenu>\n                        <NoteContentDiv>\n                            {editNote ? (\n                                <EditNoteInput\n                                    placeholder=\"Type note here..\"\n                                    autoFocus\n                                    type=\"text\"\n                                    value={noteContent}\n                                    onChange={(e) => handleContentChange(e.target.value)}\n                                />\n                            ) : (\n                                <MarkdownWrapper>\n                                    <ReactMarkdown children={noteContent} />\n                                </MarkdownWrapper>\n                            )}\n                        </NoteContentDiv>\n                    </>\n                )}\n            </NotesPreviewContainer>\n        </AnimatePresence>\n    );\n}\n","C:\\Mini projet fokus\\fokus-master\\src\\components\\notes\\NoteSearchInput.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\focusBoard\\FocusBoard.js",["278"],"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { FocussedTask } from \"./../../components/FocusBoard/FocussedTask\";\nimport { EmptyFocusBox } from \"./../../components/FocusBoard/EmptyFocusBox\";\nimport { Soundscapes } from \"./../../components/MusicBox/Soundscapes\";\n\nconst FocusBoardContainer = styled.div`\n    flex: 1 1 0;\n    min-width: 346px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin:0 0 0 20px;\n    height:100%;\n    /* background-color:silver; */\n`;\n\nconst FocussedTaskContainer = styled.div`\n    display: flex;\n    align-items:center;\n    justify-content: space-between;\n    flex-direction: column;\n    width: 80%;\n    max-width: 326px;\n    height: 226px;\n    margin: 10px 0;\n    /* background-color: green; */\n`;\n\nconst MusicBoxContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 80%;\n    max-width: 326px;\n    height: 186px;\n    margin: 10px 0;\n    background-color:${p=>p.theme.backgroundSecondary};\n    border-radius: 20px;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n`;\n\n// this can be improved as right now whole focus board is re-rendered and not just the focus task containter\n\nexport function FocusBoard() {\n    const focussedTaskIndex = useSelector((state) => state.tasks.meta.focussedTaskIndex);\n    const noTasks = useSelector((s) => s.tasks.taskArray.length===s.tasks.meta.completedTasksCount?true:false);\n    const noChoice = useSelector((s) => s.tasks.taskArray.length-s.tasks.meta.completedTasksCount<=1?true:false);\n    return (\n        <FocusBoardContainer>\n            <FocussedTaskContainer>\n                {focussedTaskIndex !== -1 ? <FocussedTask /> : <EmptyFocusBox noChoice={noChoice} noTasks={noTasks}/>}\n            </FocussedTaskContainer>\n            <MusicBoxContainer>\n                <Soundscapes />\n            </MusicBoxContainer>\n        </FocusBoardContainer>\n    );\n}\n","C:\\Mini projet fokus\\fokus-master\\src\\components\\FocusBoard\\EmptyFocusBox.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\settings\\DefaultTaskLabel.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\components\\MiscBoard\\TimeProgressCard.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\components\\MiscBoard\\EmptyLabelPie.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\store\\localStorageUtils.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\helpers\\constants.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\dashboard\\DashboardHero.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\components\\notes\\NoteCard.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\components\\MusicBox\\MusicVolumeControl.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\index.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\store\\index.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\RegisterPage.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\LandingPage.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\taskBoard\\TaskBoard.js",["279","280","281"],"C:\\Mini projet fokus\\fokus-master\\src\\helpers\\themeStyles.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\settings\\index.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\components\\TaskBoard\\NoTasks.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\components\\TaskBoard\\Divider.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\helpers\\quotes.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\components\\notes\\NotesListArea.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\notes\\notesSlice.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\components\\MiscBoard\\ProgressRings.js",[],"C:\\Mini projet fokus\\fokus-master\\src\\containers\\settings\\DefaultTaskTime.js",[],{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","replacedBy":"285"},{"ruleId":"282","replacedBy":"286"},{"ruleId":"284","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":21},{"ruleId":"282","replacedBy":"292"},{"ruleId":"284","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":157,"column":44,"nodeType":"290","endLine":157,"endColumn":55},{"ruleId":"296","severity":1,"message":"297","line":6,"column":14,"nodeType":"298","messageId":"299","endLine":6,"endColumn":16},{"ruleId":"296","severity":1,"message":"297","line":11,"column":14,"nodeType":"298","messageId":"299","endLine":11,"endColumn":16},{"ruleId":"296","severity":1,"message":"297","line":25,"column":14,"nodeType":"298","messageId":"299","endLine":25,"endColumn":16},{"ruleId":"296","severity":1,"message":"297","line":30,"column":14,"nodeType":"298","messageId":"299","endLine":30,"endColumn":16},{"ruleId":"296","severity":1,"message":"297","line":56,"column":14,"nodeType":"298","messageId":"299","endLine":56,"endColumn":16},{"ruleId":"296","severity":1,"message":"297","line":61,"column":15,"nodeType":"298","messageId":"299","endLine":61,"endColumn":17},{"ruleId":"296","severity":1,"message":"297","line":85,"column":11,"nodeType":"298","messageId":"299","endLine":85,"endColumn":13},{"ruleId":"296","severity":1,"message":"300","line":85,"column":21,"nodeType":"298","messageId":"299","endLine":85,"endColumn":23},{"ruleId":"296","severity":1,"message":"297","line":88,"column":11,"nodeType":"298","messageId":"299","endLine":88,"endColumn":13},{"ruleId":"296","severity":1,"message":"300","line":88,"column":21,"nodeType":"298","messageId":"299","endLine":88,"endColumn":23},{"ruleId":"296","severity":1,"message":"297","line":91,"column":11,"nodeType":"298","messageId":"299","endLine":91,"endColumn":13},{"ruleId":"296","severity":1,"message":"300","line":91,"column":21,"nodeType":"298","messageId":"299","endLine":91,"endColumn":23},{"ruleId":"282","replacedBy":"301"},{"ruleId":"284","replacedBy":"302"},{"ruleId":"288","severity":1,"message":"303","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"304","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":23},{"ruleId":"288","severity":1,"message":"305","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":18},{"ruleId":"288","severity":1,"message":"303","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"282","replacedBy":"306"},{"ruleId":"284","replacedBy":"307"},{"ruleId":"282","replacedBy":"308"},{"ruleId":"284","replacedBy":"309"},{"ruleId":"282","replacedBy":"310"},{"ruleId":"284","replacedBy":"311"},{"ruleId":"282","replacedBy":"312"},{"ruleId":"284","replacedBy":"313"},{"ruleId":"282","replacedBy":"314"},{"ruleId":"284","replacedBy":"315"},{"ruleId":"288","severity":1,"message":"316","line":2,"column":23,"nodeType":"290","messageId":"291","endLine":2,"endColumn":34},{"ruleId":"288","severity":1,"message":"289","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":21},{"ruleId":"288","severity":1,"message":"316","line":2,"column":23,"nodeType":"290","messageId":"291","endLine":2,"endColumn":34},{"ruleId":"288","severity":1,"message":"317","line":103,"column":36,"nodeType":"290","messageId":"291","endLine":103,"endColumn":61},{"ruleId":"288","severity":1,"message":"318","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"289","line":2,"column":23,"nodeType":"290","messageId":"291","endLine":2,"endColumn":34},{"ruleId":"288","severity":1,"message":"319","line":6,"column":24,"nodeType":"290","messageId":"291","endLine":6,"endColumn":30},{"ruleId":"288","severity":1,"message":"316","line":2,"column":23,"nodeType":"290","messageId":"291","endLine":2,"endColumn":34},{"ruleId":"288","severity":1,"message":"303","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"296","severity":1,"message":"300","line":47,"column":18,"nodeType":"298","messageId":"299","endLine":47,"endColumn":20},{"ruleId":"296","severity":1,"message":"297","line":56,"column":19,"nodeType":"298","messageId":"299","endLine":56,"endColumn":21},"no-native-reassign",["320"],"no-negated-in-lhs",["321"],["320"],["321"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar",["320"],["321"],"react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["320"],["321"],"'useState' is defined but never used.","'IoMdAnalytics' is defined but never used.","'debounce' is defined but never used.",["320"],["321"],["320"],["321"],["320"],["321"],["320"],["321"],["320"],["321"],"'useDispatch' is defined but never used.","'setSoundscapeAudioElement' is assigned a value but never used.","'useEffect' is defined but never used.","'create' is defined but never used.","no-global-assign","no-unsafe-negation"]